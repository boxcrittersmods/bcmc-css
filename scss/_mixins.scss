@mixin mq($width: desktop) {
	$type: min;
	@if $width==mobile {
		$width: $width - 1px;
		$type: max;
	}
	@media only screen and (#{$type}-width: $maxMobileWidth) {
		@content;
	}
}

@mixin centerBlock {
	margin: {
		left: auto;
		right: auto;
	}
}

@mixin pseudo($display: block, $pos: absolute, $content: "") {
	content: $content;
	display: $display;
	position: $pos;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
	$padding: unquote(($y / $x) * 100 + "%");
	@if $pseudo {
		&:before {
			@include pseudo($pos: relative);
			width: 100%;
			padding-top: $padding;
		}
	} @else {
		padding-top: $padding;
	}
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round($size / 2.5);
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round($size / 2.5);
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

@mixin input-placeholder {
	&.placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
}

@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
	position: $position;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}
@mixin absolute($args...) {
	@include position(absolute, $args...);
}

@mixin relative($args...) {
	@include position(relative, $args...);
}
@mixin fixed($args...) {
	@include position(fixed, $args...);
}

@mixin textColor($color) {
	$color: getColorCSS($color);
	color: $color;
	border: {
		color: $color;
	}
}

@mixin bgColor($color) {
	background-color: getColorCSS($color);
	$color: getColor($color);
	@if (lightness($color) > 50) {
		// @extend .text-dark;
		@include textColor("dark");
	} @else {
		//@extend .text-light;
		@include textColor("light");
	}
}

@mixin font-source-sans($size: false, $colour: false, $weight: false, $lh: false) {
	font-family: "Source Sans Pro", Helvetica, Arial, sans-serif;
	@if $size {
		font-size: $size;
	}
	@if $colour {
		@include textColor($color);
	}
	@if $weight {
		font-weight: $weight;
	}
	@if $lh {
		line-height: $lh;
	}
}

@mixin center {
	flex-flow: column;
	align-items: center;
	justify-content: center;
	text-align: center;
}

@mixin hover($color) {
	background: shade(getColor($color), 20%);
}
